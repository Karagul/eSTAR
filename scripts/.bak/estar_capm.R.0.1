#===================================================================================#
#- Historical stock prices & financials from YAHOO finance (GOOGLE alternative)
#- Save S&P500 raw data into eSTAR database
#- Last mod. by Ted, Thu Mar 10 20:47:31 EST 2016
# NOTE: for OLS fitting example
# fit <- lm(Y ~ X, data=ssx)
# coef  <- coefficients(fit)       # coefficients
# resid <- residuals(fit)          # residuals
# pred  <- predict(fit)            # fitted values
# rsq   <- summary(fit)$r.squared  # R-sq for the fit
# se    <- summary(fit)$sigma      # se of the fit
#===================================================================================#
library(RPostgreSQL)
library(dplyr)
library(zoo)
setwd('/apps/fafa/github/eSTAR/scripts')
source("_estar_ut.R")

#- Run CAPM analysis
runCAPMAnalysis <- function(mydb,sDate) {
	if(missing(sDate)) sDate=as.Date(Sys.Date()-366) # past 1-year
	iniFlg=0
	xq1Tmp=paste(readLines('tsDataBySector.sql'),collapse=' ')
	#- Get spdr list Name & corresponding ETFName/Group
	xq=paste(readLines('Name_ETFName_Sector.sql'),collapse=' ')
	spdrLst <- dbGetQuery(mydb, xq)
	etfLst=unique(spdrLst$ETFName)
	for(etfName in etfLst) {
		xlLst=filter(spdrLst,spdrLst$ETFName==etfName)
		xlLst$mean=vector(,nrow(xlLst))
		xlLst$sd=vector(,nrow(xlLst))
		xlLst$beta=vector(,nrow(xlLst))
		xlLst$const=vector(,nrow(xlLst))
		xlLst$rsq=vector(,nrow(xlLst))
		xlLst$se=vector(,nrow(xlLst))
		xlLst$startDate=vector(,nrow(xlLst))
		xlLst$endDate=vector(,nrow(xlLst))
		for(jk in 1:nrow(xlLst)) {
			tickerName=xlLst$Name[jk]
			xq1=gsub("_xName_",etfName,gsub("_yName_",tickerName,xq1Tmp))
			rsx <- dbGetQuery(mydb, xq1)
			tsDate=as.Date(as.character(rsx$pbDate),"%Y%m%d")
			xd <- sapply(rsx[,2:3],function(x) diff(log(x)*100) )
			tsx  <- zoo(xd,tsDate[2:length(tsDate)],frequency=365)
			mDate=max(time(tsx)[1],sDate)
			ssx= tsx[time(tsx)>mDate]
			fit <- lm(Y ~ X, data=ssx)
			rsq   <- summary(fit)$r.squared  # R-sq for the fit
			se    <- summary(fit)$sigma      # se of the fit
			coef  <- coefficients(fit)
			xlLst$mean[jk]=mean(ssx$Y)
			xlLst$sd[jk]=sd(ssx$Y)
			xlLst$beta[jk]=coef[2]
			xlLst$const[jk]=coef[1]
			xlLst$rsq[jk]=rsq
			xlLst$se[jk]=se
			xlLst$startDate[jk]=as.character(mDate,"%Y%m%d")
			xlLst$endDate[jk]  =as.character(time(tsx)[nrow(tsx)],"%Y%m%d")
		}
		tail(xlLst)
		iniFlg=data2dbTbl(mydb, 'beta_spdr', xlLst,iniFlg)
	}
}

#===================================================================================#
#-----      MAIN PROGRAM BEGIN      -----#

#---- DB: PostgresSQL
mydb<-dbConnect(dbDriver("PostgreSQL"),user='sfdbo',password='sfdbo0',host='localhost',dbname='eSTAR')
#---- DB: MySQL
#library(RMySQL)
#mydb<-dbConnect(MySQL(),user='sfdbo',password='sfdbo0',host='localhost',dbname='eSTAR')

#---- RUN CAPM ANALYSIS
sDate=as.Date(Sys.Date()-366) # past 1-year
runCAPMAnalysis(mydb,sDate)

dbDisconnect(mydb)
#-----      MAIN PROGRAM END      -----#
#===================================================================================#
